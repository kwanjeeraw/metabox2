% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalize_input_data_byqc.R
\name{normalize_input_data_byqc}
\alias{normalize_input_data_byqc}
\title{Internal standards (IS)-based and quality control samples (QC)-based normalizations}
\usage{
normalize_input_data_byqc(METBObj, method="nomis", istd=NULL, factorCol=NULL,
batch=FALSE, sampleType=FALSE, injectionOrder=FALSE)
}
\arguments{
\item{METBObj}{METBObj object contains list of data.}

\item{method}{name of scaling method. Choose one from the list: ccmn, nomis, ruvrand, serrf, loess. Default is nomis.}

\item{istd}{a column number/index or a vector of column numbers of internal standard(s) (IS) in the \code{METBObj$X} data frame.
This parameter is not required for serrf and loess methods.}

\item{factorCol}{a column number/index of biological factors of interest in the \code{METBObj$inputdata} data frame.
This parameter is required for ccmn and ruv2 methods.}

\item{batch}{a column number/index of the batch information in the \code{METBObj$inputdata} data frame.
This parameter is required for serrf and loess methods. Each batch must contain at least 5 qc samples.}

\item{sampleType}{a column number/index indicating sample types in the \code{METBObj$inputdata} data frame.
This parameter is required for serrf and loess methods.

Use "qc" to indicate pooled/quality control (QC) samples.
Use "sample" to indicate other samples.
sampleType allows NA, which will not be normalized by serrf or loess, e.g. blank samples.
sampleType allows other type of samples like "validate1", "validate2", e.g. validate QCs.}

\item{injectionOrder}{a column number/index of the injection order in the \code{METBObj$inputdata} data frame.
This parameter is required for serrf and loess methods. The injection order must be numeric, and unique.}
}
\value{
METBObj object
}
\description{
Normalize samples by IS-based and QC-based methods.
}
\details{
The column number or the column index always begins with 1.
}
\examples{
#load('GitHub/metabox-ml/data/qc_batch_example.RData')
#out = normalize_input_data_byqc(qc_batch_example, method="serrf",
#batch=2, sampleType=3, injectionOrder=5)
}
\references{
Henning Redestig, et al. CCMN (2009) \url{https://pubs.acs.org/doi/10.1021/ac901143w}.

Marko Sysi-Aho, et al. NOMIS (2007) \url{https://doi.org/10.1186/1471-2105-8-93}.

Alysha M. De Livera, et al. RUV (2012) \url{https://doi.org/10.1021/ac302748b}.

Alysha M. De Livera, et al. RUV (2015) \url{https://doi.org/10.1021/ac502439y}.

Ramyar Molania, et al. RUV-III (2019) \url{https://doi.org/10.1093/nar/gkz433}.

Sili Fan, et al. SERRF (2019) \url{https://doi.org/10.1021/acs.analchem.8b05592}.

LOESS.
}
\seealso{
\code{\link[crmn:normalize]{crmn::normalize()}}, \code{\link[MetNorm:NormalizeRUVRand]{MetNorm::NormalizeRUVRand()}}
}
\author{
Kwanjeera W \email{kwanjeera.wan@mahidol.ac.th}
}
